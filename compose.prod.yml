services:
  app:
    image: ${GIT_REGISTRY}/${GIT_USER}/${GIT_REPO}:${IMAGE_TAG:-latest}
    ports:
      - "${EXTERNAL_PORT:-8098}:${PORT}"
    environment:
      # Core app settings
      PORT: ${PORT}
      SERVICE_NAME: ${SERVICE_NAME}
      FLASK_ENV: production
      FLASK_DEBUG: "false"
      # Database connection (using internal Docker network)
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres  # Use Docker service name
      POSTGRES_PORT: "5432"  # Internal port
    depends_on:
      postgres:
        condition: service_healthy
    command:
      [
        "/app/bin/gunicorn",
        "--bind",
        ":${PORT}",
        "--workers",
        "1",
        "--threads",
        "8",
        "python_example.app:app",
      ]
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
